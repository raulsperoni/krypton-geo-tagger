input {
file {
path => "/tmp/datos/*.json"
start_position => beginning
sincedb_path => "/dev/null"
codec => json
#close_older => "1 hour"
#stat_interval => "1 second"
#discover_interval => 15
}
}

filter {
mutate {
remove_field => ["_id", "type"]
}
grok {
match => ["path","/tmp/datos/%{DATA:filename}.json"]
}
mutate {
add_field => {"type" => "%{filename}"}
}
}

filter {

if([type] == "barrios") {
mutate {
rename => {
"[properties][nombbarr]" => "text"
}
add_field => {
"id" => "%{type}-%{[properties][nrobarrio]}"
}
}
}
if([type] == "geonames") {
mutate {
rename => {
"name_aliases" => "text_aliases"
"name" => "text"
}
  add_field => {
"id" => "%{type}-%{id}"
}
}
mutate {
remove_field => ["name_accents"]
}
mutate {
add_field => {"[geometry][type]" => "Point"}
}
    ruby {
    code => '
      coordinates = []
      coordinates << event.get("[lon]")
      coordinates << event.get("[lat]")
      event.set("[geometry][coordinates]", coordinates)
    '
  }
mutate {
remove_field => ["name_accents","lon","lat"]
}
}
if([type] == "cruces_vias") {
mutate {
rename => {
"[properties][COD_NOMBRE]" => "code_first_street"
"[properties][NOM_CALLE_]" => "text_first_street"
  "[properties][COD_NOM_01]" => "code_second_street"
"[properties][NOM_CAL_01]" => "text_second_street"
}
add_field => {
"id" => "%{type}-%{[properties][GID]}"
}
}

mutate {
convert => {
"cod_calle" => "integer"
  "cod_calle_1" => "integer"
}
}
}
if([type] == "vias") {
mutate {
rename => {
"[properties][COD_NOMBRE]" => "cod_calle"
"[properties][NOM_CALLE]" => "text"
}
add_field => {
"id" => "%{type}-%{[properties][GID]}"
}
}

mutate {
convert => {
"cod_calle" => "integer"
}
}
}
if([type] == "lugares_interes") {
mutate {
rename => {
"[properties][NOMBRE]" => "text"
"[properties][DIRECCION]" => "text_aliases"
}
}


}
if([type] == "espacios_libres") {
mutate {
rename => {
"[properties][NOM_PARQUE]" => "text_park_name"
"[properties][NOMBRE_ESP]" => "text_space_name"
"[properties][NOM_TIPO_E]" => "text_space_type"
}
  add_field => {
"id" => "%{type}-%{[properties][GID]}"
}
}


}

mutate {
remove_field => ["properties","filename","host","path","aux"]
}

}

output {
elasticsearch {
hosts => "elasticsearch-geo:9200"
index => "montevideo"
template => "/etc/logstash/templates/montevideo-template.json"
template_name => "montevideo-template"
template_overwrite => true
ilm_enabled => false
}
# stdout { }
stdout {codec => rubydebug}
}
