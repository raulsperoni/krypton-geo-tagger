version: '3.3'

services:

  elasticsearch-geo:
    image: raulsperoniimm/pes-tagger-geo-elasticsearch
    volumes:
      - elastic_geo_data01:/usr/share/elasticsearch/data
    ports:
      - 19200:9200
      - 19300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - im

  kibana-geo:
    image: raulsperoniimm/pes-tagger-geo-kibana
    ports:
      - 15601:5601
    depends_on:
      - elasticsearch-geo
    networks:
      - im
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=im"
        - "traefik.port=5601"
        - "traefik.backend.loadbalancer.sticky=true"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.frontend.rule=PathPrefixStrip:/kibana-geo"

  logstash-geo:
    image: raulsperoniimm/pes-tagger-geo-logstash
    ports:
      - 15000:5000
    environment:
      LS_JAVA_OPTS: "-Xmx500m -Xms500m"
    depends_on:
      - elasticsearch-geo
    networks:
      - im

  tagger-geo:
    image: raulsperoniimm/pes-tagger-geo-tagger
    ports:
      - 16000:5000
    depends_on:
      - elasticsearch-geo
    networks:
      - im
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=im"
        - "traefik.port=5000"
        - "traefik.backend.loadbalancer.sticky=true"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.frontend.rule=PathPrefixStrip:/geo"




volumes:
  elastic_geo_data01:

networks:
  im:
    external: true
